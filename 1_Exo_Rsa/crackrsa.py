#!/usr/bin/env python3
import os
from Crypto.Util.number import inverse
from Crypto.PublicKey import RSA


# modulus = 00acbe7b776e96f5f357bce84d959ce53ce0029afc0e67901d3602f3275fcc7ec41027b84755e1e64c08ccebae15f9f5efc141892f3882781a35cac58b46797c09
modulus = 9047341136853946158354084931035401403317236404810122825347899274551597323166322064830737050437362451313263605495279468516338542263888005274643061077015561

e = 65537

p = 93115437532229212680057875933456519124315804016875130086475798314747218703569 
q = 97162633572145015979792735324962427827333894105174165446261955221140018659769


phy = (p-1)*(q-1)
d = inverse(e, phy)
 
privkey = RSA.construct((modulus, e, d))
 
with open("privkey.pem", "wb") as fp:
    fp.write(privkey.exportKey())